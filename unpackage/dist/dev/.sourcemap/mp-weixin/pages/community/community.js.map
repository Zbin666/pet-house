{"version":3,"file":"community.js","sources":["pages/community/community.vue","../../HBuilderX.4.57/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tbXVuaXR5L2NvbW11bml0eS52dWU"],"sourcesContent":["<template>\n\t<view class=\"page\" :style=\"dynamicTopPadding\">\n\n\n\t\t<!-- 吊牌标签 -->\n\t\t<view class=\"hanger\">\n\t\t\t<view class=\"rope\"></view>\n\t\t\t<view class=\"signs\">\n\t\t\t\t<view :class=\"['sign', topTab === 'square' ? 'active' : '']\" @tap=\"switchTab('square')\">\n\t\t\t\t\t<image v-if=\"topTab === 'square'\" class=\"sign-badge\" src=\"/static/community/ischoose.png\" mode=\"widthFix\" />\n\t\t\t\t\t<text>广场</text>\n\t\t\t\t</view>\n\t\t\t\t<view :class=\"['sign', topTab === 'qa' ? 'active' : '']\" @tap=\"switchTab('qa')\">\n\t\t\t\t\t<image v-if=\"topTab === 'qa'\" class=\"sign-badge\" src=\"/static/community/ischoose.png\" mode=\"widthFix\" />\n\t\t\t\t\t<text>问答</text>\n\t\t\t\t</view>\n\t\t\t\t<view :class=\"['sign', topTab === 'science' ? 'active' : '']\" @tap=\"switchTab('science')\">\n\t\t\t\t\t<image v-if=\"topTab === 'science'\" class=\"sign-badge\" src=\"/static/community/ischoose.png\" mode=\"widthFix\" />\n\t\t\t\t\t<text>科普</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 搜索框 -->\n\t\t<view class=\"search\">\n\t\t\t<image class=\"search-ico-img\" src=\"/static/community/search.png\" mode=\"widthFix\" />\n\t\t\t<input \n\t\t\t\tclass=\"search-input\" \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"输入你想搜索的内容\" \n\t\t\t\tplaceholder-class=\"ph\"\n\t\t\t\tv-model=\"searchText\"\n\t\t\t\t@confirm=\"handleSearch\"\n\t\t\t\t@input=\"handleSearchInput\"\n\t\t\t/>\n\t\t\t<view v-if=\"searchText\" class=\"search-clear\" @tap.stop=\"clearSearch\">\n\t\t\t\t<text>✕</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 类目 tabs -->\n\t\t<scroll-view class=\"categories\" scroll-x v-if=\"topTab === 'square'\">\n\t\t\t<view v-for=\"c in categories\" :key=\"c.key\" :class=\"['cat', currentCategory === c.key ? 'on' : '']\"\n\t\t\t\t@tap=\"selectCategory(c.key)\">{{ c.name }}</view>\n\t\t</scroll-view>\n\n\t\t<!-- 动态列表（广场） -->\n\t\t<scroll-view \n\t\t\tclass=\"feed\" \n\t\t\tv-if=\"topTab === 'square'\" \n\t\t\tscroll-y \n\t\t\t@scrolltolower=\"loadMoreFeeds\"\n\t\t\t:refresher-enabled=\"true\"\n\t\t\t:refresher-triggered=\"feedLoading\"\n\t\t\t@refresherrefresh=\"() => loadFeeds()\"\n\t\t>\n\t\t\t<view class=\"card\" v-for=\"post in posts\" :key=\"post.id\" @tap=\"goDetail(post)\">\n\t\t\t\t<view class=\"card-hd\">\n\t\t\t\t\t<image class=\"avatar\" :src=\"getUserAvatarSrc(post.avatar)\" mode=\"aspectFill\" />\n\t\t\t\t\t<view class=\"title-meta\">\n\t\t\t\t\t\t<text class=\"nickname\">{{ post.user }}</text>\n\t\t\t\t\t\t<text class=\"sub\">{{ post.pet }}｜{{ post.breed }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"time\">{{ post.time }}</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"card-bd\">\n\t\t\t\t\t<text v-if=\"post.title\" class=\"post-title\">{{ post.title }}</text>\n\t\t\t\t\t<text class=\"content\">{{ post.text }}</text>\n\t\t\t\t\t<view class=\"pics\" v-if=\"post.images && post.images.length\">\n\t\t\t\t\t\t<image class=\"pic\" v-for=\"(img, i) in post.images\" :key=\"`${imageUpdateTrigger}-${i}`\" :src=\"getPostImageSrc(img)\" mode=\"aspectFill\" @tap.stop=\"previewImages(post.images, i)\" />\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"card-ft\" @tap.stop=\"noop\">\n\t\t\t\t\t<view class=\"ft-item\">\n\t\t\t\t\t\t<image class=\"ft-icon\" src=\"/static/community/share.png\" mode=\"widthFix\" />\n\t\t\t\t\t\t<text>{{ post.shares }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"ft-item\">\n\t\t\t\t\t\t<image class=\"ft-icon\" src=\"/static/community/emoji.png\" mode=\"widthFix\" />\n\t\t\t\t\t\t<text>{{ post.comments }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"ft-item\" @tap.stop=\"toggleLike(post)\">\n\t\t\t\t\t\t<image class=\"ft-icon\" :src=\"post.isLiked ? '/static/community/good-active.png' : '/static/community/good.png'\" mode=\"widthFix\" />\n\t\t\t\t\t\t<text>{{ post.likes }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view v-if=\"post.isOwner\" class=\"ft-item delete-item\" @tap.stop=\"deletePost(post)\">\n\t\t\t\t\t\t<image class=\"ft-icon\" src=\"/static/user/delete.png\" mode=\"widthFix\" />\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 加载更多提示 -->\n\t\t\t<view class=\"load-more\" v-if=\"posts.length > 0\">\n\t\t\t\t<view v-if=\"feedLoading\" class=\"loading-text\">\n\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else-if=\"!feedHasMore\" class=\"no-more-text\">\n\t\t\t\t\t<text>没有更多了</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else class=\"load-more-text\" @tap=\"loadMoreFeeds\">\n\t\t\t\t\t<text>点击加载更多</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\n\t\t<!-- 科普列表 -->\n\t\t<scroll-view \n\t\t\tclass=\"science-feed\" \n\t\t\tv-if=\"topTab === 'science'\" \n\t\t\tscroll-y \n\t\t\t@scrolltolower=\"loadMoreArticles\"\n\t\t\t:refresher-enabled=\"true\"\n\t\t\t:refresher-triggered=\"scienceLoading\"\n\t\t\t@refresherrefresh=\"() => loadArticles()\"\n\t\t>\n\t\t\t<view class=\"science-item\" v-for=\"a in sciencePosts\" :key=\"a.id\" @tap=\"goScienceDetail(a)\">\n\t\t\t\t<view class=\"s-card\">\n\t\t\t\t\t<view class=\"s-thumb\">\n\t\t\t\t\t<image \n\t\t\t\t\t\tclass=\"s-thumb-img\" \n\t\t\t\t\t\t:src=\"getImageSrc(a)\" \n\t\t\t\t\t\tmode=\"scaleToFill\" \n\t\t\t\t\t\t@error=\"handleImageError\"\n\t\t\t\t\t\t@load=\"handleImageLoad\"\n\t\t\t\t\t/>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"s-content\">\n\t\t\t\t\t\t<text class=\"s-title\">{{ a.title }}</text>\n\t\t\t\t\t\t<text class=\"s-reads\">{{ a.reads }}个阅读</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 加载更多提示 -->\n\t\t\t<view class=\"load-more\" v-if=\"sciencePosts.length > 0\">\n\t\t\t\t<view v-if=\"scienceLoading\" class=\"loading-text\">\n\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else-if=\"!scienceHasMore\" class=\"no-more-text\">\n\t\t\t\t\t<text>没有更多了</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else class=\"load-more-text\" @tap=\"loadMoreArticles\">\n\t\t\t\t\t<text>点击加载更多</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\n\t\t<!-- 问答列表 -->\n\t\t<scroll-view \n\t\t\tclass=\"qa-feed\" \n\t\t\tv-if=\"topTab === 'qa'\" \n\t\t\tscroll-y \n\t\t\t@scrolltolower=\"loadMoreQuestions\"\n\t\t\t:refresher-enabled=\"true\"\n\t\t\t:refresher-triggered=\"qaLoading\"\n\t\t\t@refresherrefresh=\"() => loadQuestions()\"\n\t\t>\n\t\t\t<view class=\"qa-card\" v-for=\"qa in qaPosts\" :key=\"qa.id\" @tap=\"goQADetail(qa)\">\n\t\t\t\t<!-- 删除按钮 -->\n\t\t\t\t<view v-if=\"qa.isOwner\" class=\"qa-delete-btn\" @tap.stop=\"deleteQuestion(qa)\">\n\t\t\t\t\t<image class=\"qa-delete-icon\" src=\"/static/user/delete.png\" mode=\"widthFix\" />\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 问题标题 -->\n\t\t\t\t<view class=\"qa-header\">\n\t\t\t\t\t<view class=\"urgent-tag\" v-if=\"qa.isUrgent\">\n\t\t\t\t\t\t<text class=\"urgent-text\">急</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"qa-title\">{{ qa.title }}</text>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 标签 -->\n\t\t\t\t<view class=\"qa-tags\" v-if=\"qa.tags && qa.tags.length > 0\">\n\t\t\t\t\t<text class=\"qa-tag\" v-for=\"tag in qa.tags\" :key=\"tag\">#{{ tag }}</text>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 虚线分隔 -->\n\t\t\t\t<view class=\"qa-divider\"></view>\n\n\t\t\t\t<!-- 最高点赞评论或最早评论或未回答状态 -->\n\t\t\t\t<view class=\"qa-content\" v-if=\"qa.hasAnswer && qa.topAnswer\" :key=\"`qa-content-${qaAvatarUpdateTrigger}-${qa.id}`\">\n\t\t\t\t\t<view class=\"top-answer-info\">\n\t\t\t\t\t\t<image class=\"top-answer-avatar\" :src=\"getUserAvatarSrc(qa.topAnswer.user.avatarUrl)\" :key=\"`qa-avatar-${qaAvatarUpdateTrigger}-${qa.topAnswer.user.id || qa.id}`\" mode=\"aspectFill\" />\n\t\t\t\t\t\t<view class=\"top-answer-meta\">\n\t\t\t\t\t\t\t<text class=\"top-answer-user\">{{ qa.topAnswer.user.nickname }}</text>\n\t\t\t\t\t\t\t<text class=\"top-answer-pet\" v-if=\"qa.topAnswer.pet\">{{ qa.topAnswer.pet.name }}｜{{ qa.topAnswer.pet.breed }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"top-answer-likes\" v-if=\"qa.topAnswer.isTopLiked\">\n\t\t\t\t\t\t\t<image class=\"like-icon\" src=\"/static/community/good-active.png\" mode=\"widthFix\" />\n\t\t\t\t\t\t\t<text class=\"like-count\">{{ qa.topAnswer.likes }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"top-answer-badge\" v-else>\n\t\t\t\t\t\t\t<text class=\"badge-text\">最早</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"top-answer-content\">{{ qa.topAnswer.content.length > 50 ? qa.topAnswer.content.substring(0, 50) + '...' : qa.topAnswer.content }}</text>\n\t\t\t\t\t<view class=\"view-all-answers\" @tap.stop=\"goQADetail(qa)\">\n\t\t\t\t\t\t<text class=\"view-all-text\">查看所有{{ qa.answerCount }}条回答</text>\n\t\t\t\t\t\t<text class=\"arrow\">→</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"qa-content\" v-else-if=\"qa.hasAnswer\">\n\t\t\t\t\t<view class=\"view-all-answers\" @tap.stop=\"goQADetail(qa)\">\n\t\t\t\t\t\t<text class=\"view-all-text\">查看所有{{ qa.answerCount }}条回答</text>\n\t\t\t\t\t\t<text class=\"arrow\">→</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"qa-content\" v-else>\n\t\t\t\t\t<text class=\"no-answer\">暂时还没有人回答</text>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 统计信息 -->\n\t\t\t\t<view class=\"qa-stats\">\n\t\t\t\t\t<text class=\"stat-text\">{{ qa.answerCount }}个回答</text>\n\t\t\t\t\t<text class=\"stat-text\">{{ qa.readCount }}个阅读</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 加载更多提示 -->\n\t\t\t<view class=\"load-more\" v-if=\"qaPosts.length > 0\">\n\t\t\t\t<view v-if=\"qaLoading\" class=\"loading-text\">\n\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else-if=\"!qaHasMore\" class=\"no-more-text\">\n\t\t\t\t\t<text>没有更多了</text>\n\t\t\t\t</view>\n\t\t\t\t<view v-else class=\"load-more-text\" @tap=\"loadMoreQuestions\">\n\t\t\t\t\t<text>点击加载更多</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\n\t\t<!-- 浮动添加按钮 -->\n\t\t<view class=\"floating-add-btn\" v-if=\"topTab !== 'science'\" @tap=\"goToCreate\">\n\t\t\t<image class=\"add-icon\" src=\"/static/record/add.png\" mode=\"widthFix\" />\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { onShow } from '@dcloudio/uni-app'\nimport { api } from '@/utils/api.js'\n\nconst topTab = ref('square')\nconst currentUser = ref(null)\nconst searchText = ref('')\nconst isSearching = ref(false)\n\n// 动态顶部内边距\nconst dynamicTopPadding = ref('')\nonMounted(async () => {\n\ttry {\n\t\tconst info = uni.getSystemInfoSync()\n\t\tconst statusBar = info.statusBarHeight || 0\n\t\tconst screenW = info.screenWidth || 375\n\t\tconst rpxToPx = (rpx) => (rpx * screenW) / 750\n\t\tconst topPx = Math.round(statusBar * 0.35)\n\t\tdynamicTopPadding.value = `padding-top:${topPx}px;`\n\t} catch (e) {\n\t\tdynamicTopPadding.value = ''\n\t}\n\t\n\t// 清理图片缓存（只在应用启动时清理一次）\n\tpostImageCache.clear()\n\tavatarCache.clear()\n\timageCache.clear()\n\t\n\t// 获取当前用户信息\n\ttry {\n\t\tconst userProfile = await api.getProfile()\n\t\tcurrentUser.value = userProfile\n\t} catch (e) {\n\t\tconsole.error('获取用户信息失败:', e)\n\t}\n\t\n\t// 初次进入加载广场数据\n\tloadFeeds()\n\t// 加载问答数据（在用户信息加载完成后）\n\tloadQuestions()\n\t// 监听刷新事件\n\ttry { uni.$on('feeds:refresh', () => { if (topTab.value === 'square') loadFeeds() }) } catch (e) {}\n\t// 监听问答刷新事件\n\ttry { uni.$on('qa:refresh', () => { if (topTab.value === 'qa') loadQuestions() }) } catch (e) {}\n})\n\n// 统一的时间格式化函数\nfunction formatRelativeTime(createdAt) {\n\tconst now = new Date()\n\t\n\t// 解析createdAt (格式: 2025-10-23T19:56:29.000Z)\n\tconst createdDate = createdAt.split('T')[0] // 2025-10-23\n\tconst createdTime = createdAt.split('T')[1].split('.')[0] // 19:56:29\n\tconst [createdYear, createdMonth, createdDateNum] = createdDate.split('-').map(Number)\n\tconst [createdHour, createdMinute] = createdTime.split(':').map(Number)\n\t\n\t// 获取当前时间的年月日时分秒\n\tconst nowYear = now.getFullYear()\n\tconst nowMonth = now.getMonth() + 1\n\tconst nowDate = now.getDate()\n\tconst nowHour = now.getHours()\n\tconst nowMinute = now.getMinutes()\n\t\n\t// 计算总分钟差（基于年月日时分）\n\tconst totalMinutesDiff = (nowYear - createdYear) * 365 * 24 * 60 + \n\t\t(nowMonth - createdMonth) * 30 * 24 * 60 + \n\t\t(nowDate - createdDateNum) * 24 * 60 + \n\t\t(nowHour - createdHour) * 60 + \n\t\t(nowMinute - createdMinute)\n\t\n\t// 判断是否超过24小时（1440分钟）\n\tif (totalMinutesDiff < 1440) {\n\t\t// 24小时内，显示相对时间\n\t\tif (totalMinutesDiff < 1) {\n\t\t\treturn '刚刚'\n\t\t} else if (totalMinutesDiff < 60) {\n\t\t\treturn `${totalMinutesDiff}分钟前`\n\t\t} else {\n\t\t\tconst hours = Math.floor(totalMinutesDiff / 60)\n\t\t\treturn `${hours}小时前`\n\t\t}\n\t} else {\n\t\t// 超过24小时，显示创建日期时间\n\t\treturn `${createdMonth}/${createdDateNum} ${createdHour.toString().padStart(2,'0')}:${createdMinute.toString().padStart(2,'0')}`\n\t}\n}\n\n// 页面显示时刷新数据\nonShow(() => {\n\t// 如果当前在问答标签页，刷新问答数据\n\tif (topTab.value === 'qa') {\n\t\tloadQuestions()\n\t}\n\t// 如果当前在广场标签页，刷新动态数据\n\telse if (topTab.value === 'square') {\n\t\tloadFeeds()\n\t}\n\t// 如果当前在科普标签页，刷新科普数据\n\telse if (topTab.value === 'science') {\n\t\tloadArticles()\n\t}\n})\nconst categories = ref([\n\t{ key: 'rec', name: '推荐' },\n\t{ key: 'daily', name: '生活日常' },\n\t{ key: 'dress', name: '宠物穿搭' },\n\t{ key: 'care', name: '养护分享' },\n\t{ key: 'fun', name: '搞笑日常' }\n])\nconst currentCategory = ref('rec')\n\nconst posts = ref([])\n// 广场分页状态\nconst feedPage = ref(1)\nconst feedLimit = ref(10)\nconst feedHasMore = ref(true)\nconst feedLoading = ref(false)\n\nasync function loadFeeds(params = {}, isLoadMore = false) {\n\tif (feedLoading.value) return\n\t\n\ttry {\n\t\tfeedLoading.value = true\n\t\tconst currentPage = isLoadMore ? feedPage.value : 1\n\t\tconst res = await api.getFeeds({ \n\t\t\tpage: currentPage, \n\t\t\tlimit: feedLimit.value, \n\t\t\t...params \n\t\t})\n\t\tconst list = Array.isArray(res) ? res : (res.feeds || res.data || [])\n\t\t\n\t\tconst newPosts = list.map((f) => {\n\t\t\tconst user = f.User || {}\n\t\t\tconst pet = f.Pet || {}\n\t\t\tconst imgs = Array.isArray(f.images) ? f.images : []\n\t\t\t\n\t\t\t// 时间格式化\n\t\t\tlet time = '刚刚'\n\t\t\tif (f.createdAt) {\n\t\t\t\ttime = formatRelativeTime(f.createdAt)\n\t\t\t}\n\t\t\t\n\t\t\t// 提取标题（从tags字段中获取第一个标签作为标题）\n\t\t\tlet title = ''\n\t\t\tif (f.tags && Array.isArray(f.tags) && f.tags.length > 0) {\n\t\t\t\ttitle = f.tags[0]\n\t\t\t} else if (f.tags && typeof f.tags === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedTags = JSON.parse(f.tags)\n\t\t\t\t\tif (Array.isArray(parsedTags) && parsedTags.length > 0) {\n\t\t\t\t\t\ttitle = parsedTags[0]\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// 如果解析失败，忽略\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn {\n\t\t\t\tid: f.id,\n\t\t\t\tuserId: f.userId, // 添加动态作者ID\n\t\t\t\tuser: user.nickname || '用户',\n\t\t\t\tpet: pet.name || '',\n\t\t\t\tbreed: pet.breed || '',\n\t\t\t\ttime,\n\t\t\t\ttitle: title ? `#${title}` : '',\n\t\t\t\ttext: f.text || '',\n\t\t\t\tavatar: user.avatarUrl || '/static/404.png',\n\t\t\t\timages: imgs,\n\t\t\t\tlikes: f.likes || 0,\n\t\t\t\tcomments: typeof f.commentsCount === 'number' ? f.commentsCount : (Array.isArray(f.Comments) ? f.Comments.length : 0),\n\t\t\t\tshares: f.shares || 0,\n\t\t\t\tisOwner: currentUser.value && f.userId === currentUser.value.id, // 判断是否为作者\n\t\t\t\tisLiked: f.isLiked || false // 添加点赞状态\n\t\t\t}\n\t\t})\n\t\t\n\t\tif (isLoadMore) {\n\t\t\t// 加载更多：追加到现有列表\n\t\t\tposts.value = [...posts.value, ...newPosts]\n\t\t\tfeedPage.value++\n\t\t} else {\n\t\t\t// 首次加载或刷新：替换列表\n\t\t\tposts.value = newPosts\n\t\t\tfeedPage.value = 2 // 下次加载更多时从第2页开始\n\t\t}\n\t\t\n\t\t// 判断是否还有更多数据\n\t\tfeedHasMore.value = newPosts.length >= feedLimit.value\n\t\t\n\t} catch (e) {\n\t\tif (!isLoadMore) {\n\t\t\tposts.value = []\n\t\t}\n\t} finally {\n\t\tfeedLoading.value = false\n\t}\n}\n\n// 加载更多广场动态\nasync function loadMoreFeeds() {\n\tif (!feedHasMore.value || feedLoading.value) return\n\tawait loadFeeds({}, true)\n}\n\n// 加载问答数据\nasync function loadQuestions(params = {}, isLoadMore = false) {\n\tif (qaLoading.value) return\n\t\n\ttry {\n\t\tqaLoading.value = true\n\t\tconst currentPage = isLoadMore ? qaPage.value : 1\n\t\tconst res = await api.getQuestions({ \n\t\t\tpage: currentPage, \n\t\t\tlimit: qaLimit.value, \n\t\t\t...params \n\t\t})\n\t\tconst list = Array.isArray(res) ? res : (res.questions || res.data || [])\n\t\t\n\t\t// 处理问答数据\n\t\tconst newQaPosts = list.map(q => {\n\t\t\t\n\t\t\t// 时间格式化\n\t\t\tlet time = '刚刚'\n\t\t\tif (q.createdAt) {\n\t\t\t\tconst created = new Date(q.createdAt)\n\t\t\t\tconst month = created.getUTCMonth() + 1\n\t\t\t\tconst date = created.getUTCDate()\n\t\t\t\tconst hours = created.getUTCHours().toString().padStart(2, '0')\n\t\t\t\tconst minutes = created.getUTCMinutes().toString().padStart(2, '0')\n\t\t\t\ttime = `${month}/${date} ${hours}:${minutes}`\n\t\t\t}\n\t\t\t\n\t\t\t// 处理标签\n\t\t\tlet tags = []\n\t\t\tif (q.tags) {\n\t\t\t\ttry {\n\t\t\t\t\ttags = typeof q.tags === 'string' ? JSON.parse(q.tags) : q.tags\n\t\t\t\t\tif (!Array.isArray(tags)) {\n\t\t\t\t\t\ttags = []\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\ttags = []\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tconst processedQ = {\n\t\t\t\tid: q.id,\n\t\t\t\tuserId: q.user?.id || q.userId, // 从user对象中获取userId\n\t\t\t\ttitle: q.title,\n\t\t\t\tisUrgent: q.isUrgent,\n\t\t\t\thasAnswer: q.answerCount > 0,\n\t\t\t\ttopAnswer: q.topAnswerId ? {\n\t\t\t\t\tid: q.topAnswerId,\n\t\t\t\t\tcontent: q.topAnswerContent,\n\t\t\t\t\tlikes: q.topAnswerLikes || 0,\n\t\t\t\t\tisTopLiked: true,\n\t\t\t\t\tuser: q.topAnswerUserId ? {\n\t\t\t\t\t\tid: q.topAnswerUserId,\n\t\t\t\t\t\tnickname: q.topAnswerUserNickname,\n\t\t\t\t\t\tavatarUrl: q.topAnswerUserAvatar\n\t\t\t\t\t} : null,\n\t\t\t\t\tpet: q.topAnswerPetName ? {\n\t\t\t\t\t\tname: q.topAnswerPetName,\n\t\t\t\t\t\tbreed: q.topAnswerPetBreed\n\t\t\t\t\t} : null\n\t\t\t\t} : null,\n\t\t\t\tanswerCount: q.answerCount || 0,\n\t\t\t\treadCount: q.views || 0,\n\t\t\t\ttime: time,\n\t\t\t\ttags: tags,\n\t\t\t\tisOwner: currentUser.value && (q.user?.id || q.userId) === currentUser.value.id // 判断是否为作者\n\t\t\t}\n\t\t\t\n\t\t\treturn processedQ\n\t\t})\n\n\t\t// 懒加载补齐：有回答但缺少置顶回答详情时，拉取问题详情填充\n\t\tfor (const qa of newQaPosts) {\n\t\t\tif (!qa.topAnswer) {\n\t\t\t\ttry {\n\t\t\t\t\tconst detail = await api.getQuestion(qa.id)\n\t\t\t\t\tif (detail && Array.isArray(detail.answers) && detail.answers.length > 0) {\n\t\t\t\t\t\tconst top = [...detail.answers].sort((a, b) => (b.likes - a.likes) || (new Date(a.createdAt) - new Date(b.createdAt)))[0]\n\t\t\t\t\t\tqa.topAnswer = {\n\t\t\t\t\t\t\tid: top.id,\n\t\t\t\t\t\t\tcontent: top.content,\n\t\t\t\t\t\t\tlikes: top.likes || 0,\n\t\t\t\t\t\t\tisTopLiked: true,\n\t\t\t\t\t\t\tuser: top.user || null,\n\t\t\t\t\t\t\tpet: top.pet || null\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 无回答，不进行填充\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// 忽略填充错误，保持原数据\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (isLoadMore) {\n\t\t\t// 加载更多：追加到现有列表\n\t\t\tqaPosts.value = [...qaPosts.value, ...newQaPosts]\n\t\t\tqaPage.value++\n\t\t} else {\n\t\t\t// 首次加载或刷新：替换列表\n\t\t\tqaPosts.value = newQaPosts\n\t\t\tqaPage.value = 2 // 下次加载更多时从第2页开始\n\t\t}\n\t\t\n\t\t// 判断是否还有更多数据\n\t\tqaHasMore.value = newQaPosts.length >= qaLimit.value\n\t\t\n\t\t// 触发视图更新\n\t\tqaPosts.value = qaPosts.value.slice()\n\t} catch (e) {\n\t\tconsole.error('加载问答数据失败:', e)\n\t\tif (!isLoadMore) {\n\t\t\tqaPosts.value = []\n\t\t}\n\t} finally {\n\t\tqaLoading.value = false\n\t}\n}\n\n// 加载更多问答\nasync function loadMoreQuestions() {\n\tif (!qaHasMore.value || qaLoading.value) return\n\tawait loadQuestions({}, true)\n}\n\n// 问答数据\nconst qaPosts = ref([])\n// 问答分页状态\nconst qaPage = ref(1)\nconst qaLimit = ref(10)\nconst qaHasMore = ref(true)\nconst qaLoading = ref(false)\n\n// 科普数据\nconst sciencePosts = ref([])\n// 科普分页状态\nconst sciencePage = ref(1)\nconst scienceLimit = ref(10)\nconst scienceHasMore = ref(true)\nconst scienceLoading = ref(false)\n\n// 加载科普文章数据\nasync function loadArticles(params = {}, isLoadMore = false) {\n\tif (scienceLoading.value) return\n\t\n\ttry {\n\t\tscienceLoading.value = true\n\t\tconsole.log('开始加载科普文章，参数:', params, '是否加载更多:', isLoadMore)\n\t\t\n\t\tconst currentPage = isLoadMore ? sciencePage.value : 1\n\t\tconst res = await api.getArticles({ \n\t\t\tpage: currentPage, \n\t\t\tlimit: scienceLimit.value, \n\t\t\t...params \n\t\t})\n\t\tconsole.log('API返回数据:', res)\n\t\t\n\t\tconst list = Array.isArray(res) ? res : (res.articles || res.data || [])\n\t\tconsole.log('处理后的文章列表:', list)\n\n\t\tconst newArticles = list.map(article => {\n\t\t\tconsole.log('处理文章:', article.title, '图片URL:', article.cover)\n\t\t\treturn {\n\t\t\t\tid: article.id,\n\t\t\t\ttitle: article.title || '无标题',\n\t\t\t\treads: article.reads || 0,\n\t\t\t\tcover: article.cover || '/static/404.png',\n\t\t\t\t// 添加用于下载的原始URL\n\t\t\t\toriginalCover: article.cover\n\t\t\t}\n\t\t})\n\t\t\n\t\tif (isLoadMore) {\n\t\t\t// 加载更多：追加到现有列表\n\t\t\tsciencePosts.value = [...sciencePosts.value, ...newArticles]\n\t\t\tsciencePage.value++\n\t\t} else {\n\t\t\t// 首次加载或刷新：替换列表\n\t\t\tsciencePosts.value = newArticles\n\t\t\tsciencePage.value = 2 // 下次加载更多时从第2页开始\n\t\t}\n\t\t\n\t\t// 判断是否还有更多数据\n\t\tscienceHasMore.value = newArticles.length >= scienceLimit.value\n\t\t\n\t\tconsole.log('最终科普文章数据:', sciencePosts.value)\n\t\tconsole.log('当前页数:', sciencePage.value, '是否还有更多:', scienceHasMore.value)\n\t} catch (e) {\n\t\tconsole.error('加载科普文章失败:', e)\n\t\tif (!isLoadMore) {\n\t\t\tsciencePosts.value = []\n\t\t}\n\t} finally {\n\t\tscienceLoading.value = false\n\t}\n}\n\n// 加载更多科普文章\nasync function loadMoreArticles() {\n\tif (!scienceHasMore.value || scienceLoading.value) return\n\tawait loadArticles({}, true)\n}\n\n// 图片缓存，避免重复下载\nconst imageCache = new Map()\n// 用户头像缓存\nconst avatarCache = new Map()\n// 动态图片缓存\nconst postImageCache = new Map()\n// 响应式更新触发器\nconst imageUpdateTrigger = ref(0)\n// 问答头像更新触发器\nconst qaAvatarUpdateTrigger = ref(0)\n\n// 获取用户头像的可显示 src\nfunction getUserAvatarSrc(url) {\n\tif (!url) {\n\t\treturn '/static/user/user.png'\n\t}\n\t\n\t// 统一规范化：\n\t// 1) /uploads/ 相对路径 → 拼接静态域名\n\t// 2) 强制 http → https，去掉 :80\n\tlet normalized = url\n\tif (normalized.startsWith('/uploads/')) {\n\t\tnormalized = `https://pet-api.zbinli.cn${normalized}`\n\t}\n\tif (normalized.startsWith('http://pet-api.zbinli.cn')) {\n\t\tnormalized = normalized.replace('http://pet-api.zbinli.cn', 'https://pet-api.zbinli.cn')\n\t}\n\tnormalized = normalized.replace('://pet-api.zbinli.cn:80', '://pet-api.zbinli.cn')\n\n\t// 本地或静态路径直接返回\n\tif (normalized.startsWith('wxfile://') || normalized.startsWith('/static/')) {\n\t\treturn normalized\n\t}\n\n\t// 命中缓存\n\tif (avatarCache.has(normalized)) {\n\t\treturn avatarCache.get(normalized)\n\t}\n\n\t// 下载网络图片到本地临时文件\n\tuni.downloadFile({\n\t\turl: normalized,\n\t\tsuccess: (res) => {\n\t\t\tif (res.statusCode === 200 && res.tempFilePath) {\n\t\t\t\tavatarCache.set(normalized, res.tempFilePath)\n\t\t\t\t// 触发视图更新\n\t\t\t\tposts.value = [...posts.value]\n\t\t\t\tqaPosts.value = [...qaPosts.value]\n\t\t\t\tqaAvatarUpdateTrigger.value++\n\t\t\t} else {\n\t\t\t\tavatarCache.set(normalized, '/static/user/user.png')\n\t\t\t\tposts.value = [...posts.value]\n\t\t\t\tqaPosts.value = [...qaPosts.value]\n\t\t\t\tqaAvatarUpdateTrigger.value++\n\t\t\t}\n\t\t},\n\t\tfail: () => {\n\t\t\tavatarCache.set(normalized, '/static/user/user.png')\n\t\t\tposts.value = [...posts.value]\n\t\t\tqaPosts.value = [...qaPosts.value]\n\t\t\tqaAvatarUpdateTrigger.value++\n\t\t}\n\t})\n\n\t// 下载中返回占位\n\treturn '/static/user/user.png'\n}\n\n// 获取图片源，借鉴todoList的下载机制\nfunction getImageSrc(article) {\n\tconst originalUrl = article.originalCover\n\tif (!originalUrl) {\n\t\treturn '/static/404.png'\n\t}\n\t\n\t// 如果是本地路径，直接返回\n\tif (originalUrl.startsWith('/static/') || originalUrl.startsWith('wxfile://')) {\n\t\treturn originalUrl\n\t}\n\t\n\t// 检查缓存\n\tif (imageCache.has(originalUrl)) {\n\t\treturn imageCache.get(originalUrl)\n\t}\n\t\n\t// 网络图片，先下载到本地临时文件\n\tuni.downloadFile({\n\t\turl: originalUrl,\n\t\tsuccess: (res) => {\n\t\t\tif (res.statusCode === 200 && res.tempFilePath) {\n\t\t\t\t// 缓存临时文件路径\n\t\t\t\timageCache.set(originalUrl, res.tempFilePath)\n\t\t\t\t// 触发响应式更新\n\t\t\t\tsciencePosts.value = [...sciencePosts.value]\n\t\t\t} else {\n\t\t\t\tconsole.warn('图片下载失败:', originalUrl, res.statusCode)\n\t\t\t\timageCache.set(originalUrl, '/static/404.png')\n\t\t\t\tsciencePosts.value = [...sciencePosts.value]\n\t\t\t}\n\t\t},\n\t\tfail: (err) => {\n\t\t\tconsole.error('图片下载失败:', originalUrl, err)\n\t\t\timageCache.set(originalUrl, '/static/404.png')\n\t\t\tsciencePosts.value = [...sciencePosts.value]\n\t\t}\n\t})\n\t\n\t// 返回默认图片，下载完成后会自动更新\n\treturn '/static/404.png'\n}\n\n// 获取动态图片的可显示 src\nfunction getPostImageSrc(url) {\n\tif (!url) {\n\t\treturn '/static/404.png'\n\t}\n\t\n\t// 统一规范化：\n\t// 1) /uploads/ 相对路径 → 拼接静态域名\n\t// 2) 强制 http → https，去掉 :80\n\tlet normalized = url\n\tif (normalized.startsWith('/uploads/')) {\n\t\tnormalized = `https://pet-api.zbinli.cn${normalized}`\n\t}\n\tif (normalized.startsWith('http://pet-api.zbinli.cn')) {\n\t\tnormalized = normalized.replace('http://pet-api.zbinli.cn', 'https://pet-api.zbinli.cn')\n\t}\n\tnormalized = normalized.replace('://pet-api.zbinli.cn:80', '://pet-api.zbinli.cn')\n\n\t// 本地或静态路径直接返回\n\tif (normalized.startsWith('wxfile://') || normalized.startsWith('/static/')) {\n\t\treturn normalized\n\t}\n\n\t// 命中缓存\n\tif (postImageCache.has(normalized)) {\n\t\treturn postImageCache.get(normalized)\n\t}\n\n\t// 下载网络图片到本地临时文件\n\tuni.downloadFile({\n\t\turl: normalized,\n\t\tsuccess: (res) => {\n\t\t\tif (res.statusCode === 200 && res.tempFilePath) {\n\t\t\t\tpostImageCache.set(normalized, res.tempFilePath)\n\t\t\t\t// 触发视图更新\n\t\t\t\timageUpdateTrigger.value++\n\t\t\t} else {\n\t\t\t\tpostImageCache.set(normalized, '/static/404.png')\n\t\t\t\timageUpdateTrigger.value++\n\t\t\t}\n\t\t},\n\t\tfail: () => {\n\t\t\tpostImageCache.set(normalized, '/static/404.png')\n\t\t\timageUpdateTrigger.value++\n\t\t}\n\t})\n\n\t// 下载中返回占位\n\treturn '/static/404.png'\n}\n\n// 图片加载错误处理\nfunction handleImageError(e) {\n\tconsole.error('图片加载失败:', e)\n\tconsole.error('图片URL:', e.target.src)\n\tconsole.error('错误详情:', e.detail)\n\t\n\t// 设置默认图片\n\te.target.src = '/static/404.png'\n\tconsole.log('已设置默认图片:', e.target.src)\n}\n\n// 图片加载成功处理\nfunction handleImageLoad(e) {\n\tconsole.log('图片加载成功:', e.target.src)\n}\n\nfunction selectCategory(key) { \n\tcurrentCategory.value = key \n\t// 如果需要按类目过滤，将 key 作为标签传给后端\n\tif (topTab.value === 'square') {\n\t\tconst categoryParam = key === 'rec' ? undefined : key\n\t\tloadFeeds(categoryParam ? { category: categoryParam } : {})\n\t}\n}\n\nfunction switchTab(tab) {\n\ttopTab.value = tab\n\tif (tab === 'square' && posts.value.length === 0) {\n\t\tloadFeeds()\n\t} else if (tab === 'qa' && qaPosts.value.length === 0) {\n\t\tloadQuestions()\n\t} else if (tab === 'science' && sciencePosts.value.length === 0) {\n\t\tloadArticles()\n\t}\n}\n\nfunction goDetail(post) {\n    uni.navigateTo({\n        url: `/pages/communityDetail/communityDetail?id=${post.id}`,\n        success: (res) => {\n            try {\n                res.eventChannel.emit('post', post)\n            } catch (e) { }\n        }\n    })\n}\nfunction goQADetail(qa) {\n\tuni.navigateTo({\n\t\turl: '/pages/questionDetail/questionDetail',\n\t\tsuccess: (res) => {\n\t\t\ttry {\n\t\t\t\tres.eventChannel.emit('qa', qa)\n\t\t\t} catch (e) { }\n\t\t}\n\t})\n}\nasync function goScienceDetail(article) {\n\ttry {\n\t\tconsole.log('🔍 点击科普文章:', article)\n\t\tconsole.log('🔍 当前阅读数:', article.reads)\n\t\t\n\t\t// 增加阅读数\n\t\tconsole.log('📡 开始调用增加阅读数API...')\n\t\tconst result = await api.incrementArticleReads(article.id)\n\t\tconsole.log('📡 API返回结果:', result)\n\t\t\n\t\tif (result && result.success) {\n\t\t\tconsole.log('✅ 阅读数增加成功，新阅读数:', result.reads)\n\t\t\t// 更新本地数据中的阅读数\n\t\t\tconst index = sciencePosts.value.findIndex(a => a.id === article.id)\n\t\t\tconsole.log('🔍 找到文章索引:', index)\n\t\t\t\n\t\t\tif (index > -1) {\n\t\t\t\tconsole.log('🔄 更新前本地阅读数:', sciencePosts.value[index].reads)\n\t\t\t\tsciencePosts.value[index].reads = result.reads\n\t\t\t\tconsole.log('🔄 更新后本地阅读数:', sciencePosts.value[index].reads)\n\t\t\t}\n\t\t\t// 同时更新传入详情页的数据\n\t\t\tarticle.reads = result.reads\n\t\t\tconsole.log('🔄 更新传入详情页的阅读数:', article.reads)\n\t\t} else {\n\t\t\tconsole.warn('⚠️ API返回失败或格式不正确:', result)\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('❌ 增加阅读数失败:', error)\n\t\t// 即使增加阅读数失败，也继续跳转到详情页\n\t}\n\t\n\tconsole.log('🚀 准备跳转到详情页，文章数据:', article)\n\tuni.navigateTo({\n\t\turl: `/pages/scienceDetail/scienceDetail?id=${article.id}`,\n\t\tsuccess: (res) => {\n\t\t\tconsole.log('✅ 页面跳转成功')\n\t\t\ttry {\n\t\t\t\tres.eventChannel.emit('science', article)\n\t\t\t\tconsole.log('📤 已发送文章数据到详情页:', article)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('❌ 发送数据到详情页失败:', e)\n\t\t\t}\n\t\t},\n\t\tfail: (err) => {\n\t\t\tconsole.error('❌ 页面跳转失败:', err)\n\t\t}\n\t})\n}\nfunction goToCreate() { uni.navigateTo({ url: '/pages/createCommunity/createCommunity' }) }\nfunction noop() { }\n\n// 预览图片\nfunction previewImages(images, current) {\n\tif (!images || images.length === 0) return\n\t\n\tuni.previewImage({\n\t\tcurrent: current,\n\t\turls: images,\n\t\tsuccess: () => {\n\t\t\tconsole.log('图片预览成功')\n\t\t},\n\t\tfail: (err) => {\n\t\t\tconsole.error('图片预览失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片预览失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t})\n}\n\n// 切换点赞状态\nasync function toggleLike(post) {\n\tif (!currentUser.value) {\n\t\tuni.showToast({\n\t\t\ttitle: '请先登录',\n\t\t\ticon: 'none'\n\t\t})\n\t\treturn\n\t}\n\t\n\ttry {\n\t\tconst result = await api.likeFeed(post.id)\n\t\tif (result) {\n\t\t\t// 更新点赞数量和状态\n\t\t\tpost.likes = result.likes\n\t\t\tpost.isLiked = result.isLiked\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: post.isLiked ? '已点赞' : '已取消点赞',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 1000\n\t\t\t})\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('点赞操作失败:', error)\n\t\tuni.showToast({\n\t\t\ttitle: '操作失败',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 删除动态\nasync function deletePost(post) {\n\ttry {\n\t\tuni.showModal({\n\t\t\ttitle: '确认删除',\n\t\t\tcontent: '确定要删除这条动态吗？删除后无法恢复。',\n\t\t\tconfirmText: '删除',\n\t\t\tcancelText: '取消',\n\t\t\tconfirmColor: '#ff4757',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait api.deleteFeed(post.id)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// 从列表中移除已删除的动态\n\t\t\t\t\t\tconst index = posts.value.findIndex(p => p.id === post.id)\n\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\tposts.value.splice(index, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('删除动态失败:', error)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t} catch (error) {\n\t\tconsole.error('删除动态失败:', error)\n\t\tuni.showToast({\n\t\t\ttitle: '删除失败',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 删除问答\nasync function deleteQuestion(qa) {\n\ttry {\n\t\tuni.showModal({\n\t\t\ttitle: '确认删除',\n\t\t\tcontent: '确定要删除这个问答吗？删除后无法恢复。',\n\t\t\tconfirmText: '删除',\n\t\t\tcancelText: '取消',\n\t\t\tconfirmColor: '#ff4757',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait api.deleteQuestion(qa.id)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// 从列表中移除已删除的问答\n\t\t\t\t\t\tconst index = qaPosts.value.findIndex(q => q.id === qa.id)\n\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\tqaPosts.value.splice(index, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('删除问答失败:', error)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t} catch (error) {\n\t\tconsole.error('删除问答失败:', error)\n\t\tuni.showToast({\n\t\t\ttitle: '删除失败',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 搜索处理\nfunction handleSearch() {\n\tif (!searchText.value.trim()) return\n\t\n\tisSearching.value = true\n\tif (topTab.value === 'square') {\n\t\tloadFeeds({ search: searchText.value.trim() })\n\t} else if (topTab.value === 'qa') {\n\t\tloadQuestions({ search: searchText.value.trim() })\n\t} else if (topTab.value === 'science') {\n\t\tloadArticles({ search: searchText.value.trim() })\n\t}\n}\n\n// 搜索输入处理（防抖）\nlet searchTimeout = null\nfunction handleSearchInput() {\n\tif (searchTimeout) {\n\t\tclearTimeout(searchTimeout)\n\t}\n\t\n\tsearchTimeout = setTimeout(() => {\n\t\tif (searchText.value.trim()) {\n\t\t\thandleSearch()\n\t\t} else {\n\t\t\t// 如果搜索框为空，重新加载数据\n\t\t\tif (topTab.value === 'square') {\n\t\t\t\tloadFeeds()\n\t\t\t} else if (topTab.value === 'qa') {\n\t\t\t\tloadQuestions()\n\t\t\t} else if (topTab.value === 'science') {\n\t\t\t\tloadArticles()\n\t\t\t}\n\t\t\tisSearching.value = false\n\t\t}\n\t}, 500) // 500ms 防抖\n}\n\n// 清除搜索\nfunction clearSearch() {\n\tsearchText.value = ''\n\tisSearching.value = false\n\tif (topTab.value === 'square') {\n\t\tloadFeeds()\n\t} else if (topTab.value === 'qa') {\n\t\tloadQuestions()\n\t} else if (topTab.value === 'science') {\n\t\tloadArticles()\n\t}\n}\n</script>\n\n<style scoped>\n.page {\n\tpadding: 24rpx 32rpx;\n\t/* 动态计算顶部间距，避免真机调试时env不生效 */\n\tmin-height: 100vh;\n\tbackground: linear-gradient(180deg, #fff1a8 0%, #fff3c9 32%, #fff7e3 68%, #fffaf1 100%);\n}\n\n/* 顶部 */\n.topbar {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: 16rpx;\n}\n\n.left {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 8rpx;\n\tcolor: #2c2c2c;\n}\n\n.brand {\n\tfont-size: 36rpx;\n\tfont-weight: 700;\n\tcolor: #2c2c2c;\n}\n\n.right {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 12rpx;\n\tcolor: #2c2c2c;\n}\n\n/* 吊牌 */\n.hanger {\n\tposition: relative;\n\tmargin: 8rpx 0 10rpx;\n}\n\n.rope {\n\theight: 8rpx;\n\tbackground: linear-gradient(90deg, #2c2c2c 0%, #4a4a4a 50%, #2c2c2c 100%);\n\tborder-radius: 8rpx;\n\tbox-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.3);\n\tposition: relative;\n}\n\n.rope::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: -2rpx;\n\tleft: 0;\n\tright: 0;\n\theight: 4rpx;\n\tbackground: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.3) 50%, transparent 100%);\n\tborder-radius: 4rpx;\n}\n\n.signs {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tmargin-top: -5rpx;\n\tgap: 8rpx;\n}\n\n.sign {\n\tposition: relative;\n\twidth: 160rpx;\n\theight: 90rpx;\n\tbackground: #fffbea;\n\tborder: 4rpx solid #2c2c2c;\n\tborder-radius: 16rpx 16rpx 20rpx 20rpx;\n\tbox-shadow: 0 8rpx 0 #2c2c2c, 0 4rpx 8rpx rgba(0, 0, 0, 0.2);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttransform: rotate(-8deg);\n\ttransition: all 0.3s ease;\n}\n\n.sign-badge {\n\tposition: absolute;\n\ttop: -38rpx;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\twidth: 62rpx;\n\theight: 62rpx;\n\tz-index: 2;\n\tpointer-events: none;\n}\n\n.sign::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: -8rpx;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\twidth: 24rpx;\n\theight: 16rpx;\n\tbackground: #2c2c2c;\n\tborder-radius: 12rpx;\n\tbox-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.3);\n}\n\n.sign::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: -4rpx;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\twidth: 16rpx;\n\theight: 12rpx;\n\tbackground: #fffbea;\n\tborder-radius: 8rpx;\n\tborder: 2rpx solid #2c2c2c;\n}\n\n.sign.active {\n\tbackground: #ffe48a;\n\ttransform: rotate(-8deg) scale(1.05);\n\tbox-shadow: 0 10rpx 0 #2c2c2c, 0 6rpx 12rpx rgba(0, 0, 0, 0.3);\n}\n\n.sign.active::after {\n\tbackground: #ffe48a;\n\tborder-color: #2c2c2c;\n}\n\n.sign text {\n\tfont-weight: 600;\n\tfont-size: 28rpx;\n\tcolor: #2c2c2c;\n\ttext-shadow: 0 1rpx 2rpx rgba(0, 0, 0, 0.1);\n}\n\n/* 搜索 */\n.search {\n\tmargin: 45rpx 0 10rpx;\n\tbackground: #fff;\n\tborder: 4rpx solid #2c2c2c;\n\tborder-radius: 999rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 16rpx 20rpx;\n}\n\n.search-ico {\n\tdisplay: none;\n}\n\n.search-ico-img {\n\twidth: 32rpx;\n\theight: 32rpx;\n\tmargin-right: 12rpx;\n}\n\n.search-input {\n\tflex: 1;\n\tfont-size: 28rpx;\n}\n\n.ph {\n\tcolor: #bbb;\n}\n\n.search-clear {\n\twidth: 42rpx;\n\theight: 42rpx;\n\tbackground: #ddd;\n\tborder-radius: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin-left: 12rpx;\n}\n\n.search-clear text {\n\tcolor: #666;\n\tfont-size: 28rpx;\n\tfont-weight: bold;\n}\n\n/* 类目 */\n.categories {\n\twhite-space: nowrap;\n\tdisplay: flex;\n\tmargin: 30rpx 0 30rpx;\n}\n\n.cat {\n\tdisplay: inline-flex;\n\tpadding: 10rpx 18rpx;\n\tbackground: #fff7d6;\n\tcolor: #2c2c2c;\n\tborder-radius: 999rpx;\n\tmargin-right: 16rpx;\n\tfont-size: 24rpx;\n}\n\n.cat.on {\n\tbackground: #ffec99;\n\tfont-weight: 600;\n}\n\n/* 动态卡片 */\n.feed {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 35rpx;\n\theight: calc(100vh - 200rpx);\n\toverflow-y: auto;\n}\n\n.card {\n\tbackground: #fff;\n\tborder-radius: 24rpx;\n\tborder: 4rpx solid #2c2c2c;\n\tpadding: 25rpx 35rpx;\n\tbox-shadow: 0 8rpx 0 #2c2c2c;\n\tmargin-bottom: 30rpx;\n}\n\n.card-hd {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.avatar {\n\twidth: 80rpx;\n\theight: 80rpx;\n\tborder-radius: 50%;\n\tborder: 2rpx solid #2c2c2c;\n\tbackground: #f5f5f5;\n}\n\n.title-meta {\n\tflex: 1;\n\tmargin-left: 12rpx;\n}\n\n.nickname {\n\tfont-size: 30rpx;\n\tfont-weight: 700;\n\tcolor: #2c2c2c;\n}\n\n.sub {\n\tdisplay: block;\n\tcolor: #7a7a7a;\n\tfont-size: 24rpx;\n\tmargin-top: 4rpx;\n}\n\n.time {\n\tcolor: #7a7a7a;\n\tfont-size: 24rpx;\n}\n\n.card-bd {\n\tmargin-top: 10rpx;\n}\n\n.post-title {\n\tdisplay: block;\n\tcolor: #82919c;\n\tfont-size: 28rpx;\n\tfont-weight: 600;\n\tmargin: 16rpx 0 0rpx 0;\n\tline-height: 1.4;\n}\n\n.content {\n\tdisplay: block;\n\tcolor: #333;\n\tline-height: 1.6;\n\tmargin: 24rpx 0;\n\tfont-size: 26rpx;\n}\n\n.pics {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\tgap: 12rpx;\n}\n\n.pic {\n\twidth: 100%;\n\theight: 200rpx;\n\tbackground: #f3f3f3;\n\tborder-radius: 12rpx;\n\tcursor: pointer;\n\ttransition: transform 0.2s ease;\n}\n\n.pic:active {\n\ttransform: scale(0.98);\n}\n\n.card-ft {\n\tmargin-top: 18rpx;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 8rpx;\n\tcolor: #555;\n\tfont-size: 28rpx;\n}\n\n.ft-item {\n\tbackground: #fff;\n\tpadding: 8rpx 16rpx;\n\tborder-radius: 999rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 8rpx;\n}\n\n.ft-icon {\n\twidth: 24rpx;\n\theight: 24rpx;\n}\n\n.delete-item {\n\tbackground: #ffebee !important;\n\tborder: 2rpx solid #ffcdd2 !important;\n}\n\n.delete-item .ft-icon {\n\tfilter: hue-rotate(0deg) saturate(1.5) brightness(0.8);\n}\n\n.floating-add-btn {\n\tposition: fixed;\n\tright: -2rpx;\n\tbottom: 120rpx;\n\twidth: 120rpx;\n\theight: 60rpx;\n\tz-index: 10;\n}\n\n.add-icon {\n\twidth: 80%;\n\theight: 80%;\n\ttransform: rotate(-30deg);\n\ttransform-origin: center center;\n}\n\n/* 问答样式 */\n.qa-feed {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20rpx;\n\tmargin-top: 20rpx;\n\theight: calc(100vh - 200rpx);\n\toverflow-y: auto;\n}\n\n.qa-card {\n\tposition: relative;\n\tbackground: #fff;\n\tborder-radius: 20rpx;\n\tborder: 4rpx solid #2c2c2c;\n\tpadding: 24rpx;\n\tbox-shadow: 0 6rpx 0 #2c2c2c;\n\tmargin-bottom: 30rpx;\n}\n\n.qa-delete-btn {\n\tposition: absolute;\n\ttop: 16rpx;\n\tright: 16rpx;\n\twidth: 48rpx;\n\theight: 48rpx;\n\tbackground: #ffebee;\n\tborder: 2rpx solid #ffcdd2;\n\tborder-radius: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: 10;\n}\n\n.qa-delete-icon {\n\twidth: 20rpx;\n\theight: 20rpx;\n}\n\n/* 左右装饰圆点（卡片竖直中心） */\n.qa-card::before,\n.qa-card::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\t/* 垂直居中 */\n\twidth: 22rpx;\n\theight: 22rpx;\n\tbackground: #2c2c2c;\n\tborder-radius: 50%;\n\tbox-shadow: 0 0 0 6rpx #fff;\n\t/* 白色描边，营造镂空效果 */\n}\n\n.qa-card::before {\n\tleft: -12rpx;\n}\n\n.qa-card::after {\n\tright: -12rpx;\n}\n\n.qa-header {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 12rpx;\n\tmargin-bottom: 16rpx;\n}\n\n.urgent-tag {\n\twidth: 32rpx;\n\theight: 32rpx;\n\tbackground: #ff6b35;\n\tborder-radius: 6rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-shrink: 0;\n}\n\n.urgent-text {\n\tcolor: #fff;\n\tfont-size: 20rpx;\n\tfont-weight: 600;\n}\n\n.qa-title {\n\tfont-size: 32rpx;\n\tfont-weight: 600;\n\tcolor: #2c2c2c;\n\tline-height: 1.4;\n\tflex: 1;\n\tpadding: 12rpx 8rpx 10rpx 0;\n}\n\n.qa-tags {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 8rpx;\n\tmargin: 12rpx 0;\n}\n\n.qa-tag {\n\tbackground: #f0f8ff;\n\tcolor: #4a90e2;\n\tfont-size: 22rpx;\n\tpadding: 4rpx 12rpx;\n\tborder-radius: 12rpx;\n\tborder: 1rpx solid #d0e7ff;\n}\n\n.qa-divider {\n\theight: 0;\n\tborder-top: 6rpx dashed #2c2c2c;\n\tmargin: 18rpx 0;\n}\n\n.qa-content {\n\tmargin-bottom: 16rpx;\n}\n\n.top-answer-info {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 12rpx;\n\tmargin-bottom: 12rpx;\n}\n\n.top-answer-avatar {\n\twidth: 60rpx;\n\theight: 60rpx;\n\tborder-radius: 50%;\n\tbackground: #f5f5f5;\n\tborder: 2rpx solid #2c2c2c;\n}\n\n.top-answer-meta {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.top-answer-user {\n\tfont-size: 24rpx;\n\tfont-weight: 600;\n\tcolor: #2c2c2c;\n}\n\n.top-answer-pet {\n\tfont-size: 20rpx;\n\tcolor: #7a7a7a;\n\tmargin-top: 2rpx;\n}\n\n.top-answer-likes {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 4rpx;\n\tbackground: #f0f8ff;\n\tpadding: 6rpx 12rpx;\n\tborder-radius: 16rpx;\n\tborder: 1rpx solid #d0e7ff;\n}\n\n.like-icon {\n\twidth: 16rpx;\n\theight: 16rpx;\n}\n\n.like-count {\n\tfont-size: 20rpx;\n\tcolor: #4a90e2;\n\tfont-weight: 600;\n}\n\n.top-answer-badge {\n\tbackground: #f0f9ff;\n\tpadding: 6rpx 12rpx;\n\tborder-radius: 16rpx;\n\tborder: 1rpx solid #bae6fd;\n}\n\n.badge-text {\n\tfont-size: 20rpx;\n\tcolor: #0ea5e9;\n\tfont-weight: 600;\n}\n\n.top-answer-content {\n\tfont-size: 26rpx;\n\tcolor: #333;\n\tline-height: 1.5;\n\tdisplay: block;\n\tmargin-bottom: 12rpx;\n}\n\n.view-all-answers {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground: #f8f9fa;\n\tpadding: 12rpx 16rpx;\n\tborder-radius: 12rpx;\n\tborder: 1rpx solid #e9ecef;\n}\n\n.view-all-text {\n\tfont-size: 24rpx;\n\tcolor: #4a90e2;\n\tfont-weight: 500;\n}\n\n.arrow {\n\tfont-size: 24rpx;\n\tcolor: #4a90e2;\n\tfont-weight: bold;\n\tline-height: 1;\n}\n\n.no-answer {\n\tfont-size: 26rpx;\n\tcolor: #bbb;\n\ttext-align: center;\n\tpadding: 20rpx 0;\n}\n\n.qa-stats {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 20rpx;\n}\n\n.stat-text {\n\tfont-size: 22rpx;\n\tcolor: #999;\n}\n\n/* 科普卡片样式 */\n.science-feed {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 18rpx;\n\theight: calc(100vh - 200rpx);\n\toverflow-y: auto;\n}\n\n.science-item {\n\tdisplay: flex;\n\tmargin-bottom: 30rpx;\n}\n\n.s-card {\n\tposition: relative;\n\twidth: 420rpx;\n\tmargin-left: 40rpx;\n\tbackground: #fff;\n\tborder: 4rpx solid #2c2c2c;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 6rpx 0 #2c2c2c;\n\tpadding: 20rpx 20rpx 20rpx 200rpx;\n\tmin-height: 160rpx;\n\tmargin-top: 28rpx;\n}\n\n.s-thumb {\n\tposition: absolute;\n\tleft: -45rpx;\n\ttop: -24rpx;\n\twidth: 220rpx;\n\theight: 180rpx;\n\tborder: 4rpx solid #2c2c2c;\n\tborder-radius: 12rpx;\n\toverflow: hidden;\n\tbackground: #8ce1ff;\n\tbox-shadow: 0 4rpx 0 #2c2c2c;\n\tz-index: 10;\n}\n\n.s-thumb-img {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: fill;\n}\n\n.s-content {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\theight: 100%;\n\twidth: 416rpx;\n}\n\n.s-title {\n\tfont-size: 28rpx;\n\tfont-weight: 700;\n\tcolor: #2c2c2c;\n\tline-height: 1.6;\n\tmargin-bottom: 12rpx;\n}\n\n.s-reads {\n\tcolor: #7a7a7a;\n\tfont-size: 24rpx;\n}\n\n/* 加载更多样式 */\n.load-more {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 30rpx 0;\n\tmargin-top: 20rpx;\n}\n\n.loading-text,\n.load-more-text {\n\n}\n\n.no-more-text {\n\tbackground: transparent;\n\tborder: none;\n\tposition: relative;\n\tpadding: 0 40rpx;\n}\n\n.no-more-text::before,\n.no-more-text::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 50%;\n\twidth: 100rpx;\n\theight: 2rpx;\n\tbackground: #ddd;\n}\n\n.no-more-text::before {\n\tleft: -80rpx;\n}\n\n.no-more-text::after {\n\tright: -80rpx;\n}\n\n.loading-text text {\n\tcolor: #666;\n\tfont-size: 24rpx;\n}\n\n.no-more-text text {\n\tcolor: #999;\n\tfont-size: 24rpx;\n}\n\n.load-more-text {\n\tbackground: #fff;\n\tborder-color: #2c2c2c;\n\tcursor: pointer;\n\ttransition: all 0.2s ease;\n}\n\n.load-more-text:active {\n\ttransform: scale(0.98);\n\tbackground: #f0f0f0;\n}\n\n.load-more-text text {\n\tcolor: #2c2c2c;\n\tfont-size: 24rpx;\n\tfont-weight: 500;\n}\n</style>\n","import MiniProgramPage from 'E:/Uni-App-file/pet-house/pages/community/community.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onMounted","uni","api","onShow"],"mappings":"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"}