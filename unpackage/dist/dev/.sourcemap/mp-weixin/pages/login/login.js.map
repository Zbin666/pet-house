{"version":3,"file":"login.js","sources":["pages/login/login.vue","../../HBuilderX.4.57/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW4udnVl"],"sourcesContent":["<template>\n    <view class=\"login-page\">\n        \n\t\t<!-- 安全注册插件 -->\n\t\t<!-- #ifdef MP-WEIXIN -->\n\t\t<!-- 注意：login 组件必须有 class=\"login-modal\"，使用 v-show 而不是 v-if -->\n\t\t<login class=\"login-modal\" :modal=\"modal\" @success=\"loginSuccess\" @fail=\"loginFail\" @cancel=\"loginCancel\" v-show=\"login_show\"></login>\n\t\t<!-- #endif -->\n        \n\t\t<!-- Logo -->\n\t\t<image class=\"logo\" src=\"/static/login/logo.png\" mode=\"widthFix\" />\n\n\t\t<!-- Title -->\n\t\t<view class=\"title\">欢迎来到宠物屋</view>\n\n\t\t<!-- Buttons -->\n\t\t<view class=\"btn-group\">\n\t\t\t<button class=\"btn wx\" :disabled=\"loading\" @tap=\"handleWeChatLogin\">\n\t\t\t\t<image class=\"icon-img\" src=\"/static/login/WeChat.png\" mode=\"widthFix\" />\n\t\t\t\t<text>{{ loading ? '登录中...' : '微信登录' }}</text>\n\t\t\t</button>\n\t\t\t<button class=\"btn phone\" :disabled=\"loading\" @tap=\"handlePhoneLogin\">\n\t\t\t\t<image class=\"icon-img\" src=\"/static/login/phone.png\" mode=\"widthFix\" />\n\t\t\t\t<text>{{ loading ? '登录中...' : '手机号登录' }}</text>\n\t\t\t</button>\n\t\t</view>\n\n\t\t<!-- Agreement -->\n\t\t<view class=\"agreement\" @tap=\"toggleAgree\">\n\t\t\t<view class=\"checkbox\" :class=\"{ checked: agreed }\"></view>\n\t\t\t<text>我已阅读并同意宠物屋</text>\n\t\t\t<text class=\"link\" @tap.stop=\"openAgreement\">《用户协议》</text>\n\t\t\t<text> 和 </text>\n\t\t\t<text class=\"link\" @tap.stop=\"openPrivacy\">《隐私政策》</text>\n\t\t</view>\n\n\t\t<!-- 测试信息 -->\n\t\t<view class=\"test-info\" v-if=\"showTestInfo\">\n\t\t\t<text class=\"test-title\">测试信息</text>\n\t\t\t<text class=\"test-item\">登录状态: {{ isLoggedIn ? '已登录' : '未登录' }}</text>\n\t\t\t<text class=\"test-item\">用户信息: {{ userInfo ? JSON.stringify(userInfo) : '无' }}</text>\n\t\t\t<text class=\"test-item\">Token: {{ token ? '有' : '无' }}</text>\n\t\t\t<text class=\"test-item\">协议同意: {{ agreed ? '是' : '否' }}</text>\n\t\t</view>\n\n\t\t<!-- 测试按钮 -->\n\t\t<view class=\"test-buttons\" v-if=\"showTestInfo\">\n\t\t\t<button class=\"test-btn\" @tap=\"testWeChatLogin\" :disabled=\"loading\">测试微信登录</button>\n\t\t\t<button class=\"test-btn\" @tap=\"testPhoneLogin\" :disabled=\"loading\">测试手机登录</button>\n\t\t\t<button class=\"test-btn\" @tap=\"testLogout\" :disabled=\"loading\">测试退出</button>\n\t\t\t<button class=\"test-btn\" @tap=\"testAPI\" :disabled=\"loading\">测试API</button>\n\t\t</view>\n\n\t\t<!-- 测试开关 -->\n\t\t<view class=\"test-toggle\" @tap=\"toggleTestInfo\">\n\t\t\t<text>{{ showTestInfo ? '隐藏测试' : '显示测试' }}</text>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { wechatLogin } from '@/utils/wechatAuthNew.js'\nimport { loginWithPhone, checkLogin, isTokenValid } from '@/utils/auth.js'\nimport { initState, handleLogout } from '@/utils/store.js'\nimport { api } from '@/utils/api.js'\n\nconst agreed = ref(false)\nconst loading = ref(false)\nconst showTestInfo = ref(false)\nconst isLoggedIn = ref(false)\nconst userInfo = ref(null)\nconst token = ref(null)\n\n// 安全注册插件相关\nconst modal = ref({\n  title: '完善用户信息',\n  content: '授权登录后，开始使用完整功能'\n})\nconst login_show = ref(false)\n\n// 初始化页面\nonMounted(async () => {\n  // 初始化状态\n  const state = initState()\n  isLoggedIn.value = state.isLoggedIn\n  userInfo.value = state.userInfo\n  token.value = state.token\n  \n  // 检查是否已同意协议\n  const savedAgreed = uni.getStorageSync('agreed')\n  agreed.value = savedAgreed || false\n\n  // 若本地已有 token，先尝试服务端校验；通过则跳首页\n  try {\n    const local = checkLogin()\n    if (local.token) {\n      // 本地快速校验通过，或无法解析时也尝试服务器校验\n      if (!isTokenValid(local.token)) {\n        // fallthrough to server check\n      }\n      await api.getProfile()\n      uni.switchTab({ url: '/pages/index/index' })\n    }\n  } catch (_e) {\n    // 无效或过期，留在登录页\n  }\n})\n\nfunction toggleAgree() { \n  agreed.value = !agreed.value\n  // 保存协议同意状态\n  uni.setStorageSync('agreed', agreed.value)\n}\n\n// 测试相关函数\nfunction toggleTestInfo() {\n  showTestInfo.value = !showTestInfo.value\n}\n\nasync function testWeChatLogin() {\n  loading.value = true\n  try {\n    await wechatLogin()\n    uni.showToast({ title: '微信登录成功', icon: 'success' })\n    // 更新状态\n    const state = initState()\n    isLoggedIn.value = state.isLoggedIn\n    userInfo.value = state.userInfo\n    token.value = state.token\n  } catch (error) {\n    uni.showToast({ title: '微信登录失败', icon: 'error' })\n    console.error('微信登录失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nasync function testPhoneLogin() {\n  loading.value = true\n  try {\n    await loginWithPhone()\n    uni.showToast({ title: '手机登录成功', icon: 'success' })\n    // 更新状态\n    const state = initState()\n    isLoggedIn.value = state.isLoggedIn\n    userInfo.value = state.userInfo\n    token.value = state.token\n  } catch (error) {\n    uni.showToast({ title: '手机登录失败', icon: 'error' })\n    console.error('手机登录失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction testLogout() {\n  handleLogout()\n  isLoggedIn.value = false\n  userInfo.value = null\n  token.value = null\n  uni.showToast({ title: '已退出登录', icon: 'success' })\n}\n\nasync function testAPI() {\n  loading.value = true\n  try {\n    const result = await api.getProfile()\n    uni.showToast({ title: 'API测试成功', icon: 'success' })\n    console.log('API响应:', result)\n  } catch (error) {\n    uni.showToast({ title: 'API测试失败', icon: 'error' })\n    console.error('API测试失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nasync function handleWeChatLogin() {\n  if (!agreed.value) {\n    uni.showToast({\n      title: '请先同意用户协议',\n      icon: 'none'\n    })\n    return\n  }\n  \n  // #ifdef MP-WEIXIN\n  // 检查用户是否已有完整的用户信息（优先使用 basicUserInfo）\n  const basicUserInfo = uni.getStorageSync('basicUserInfo')\n  const existingUserInfo = uni.getStorageSync('userInfo')\n  \n  // 优先使用 basicUserInfo，如果没有则使用 userInfo\n  const userInfoToCheck = basicUserInfo || existingUserInfo\n  const hasCompleteInfo = userInfoToCheck && userInfoToCheck.nickname && userInfoToCheck.avatarUrl\n  \n  if (hasCompleteInfo) {\n    // 直接使用现有信息进行静默登录\n    loading.value = true\n    try {\n      const result = await api.login({\n        code: `silent_login_${Date.now()}`,\n        nickname: userInfoToCheck.nickname,\n        avatarUrl: userInfoToCheck.avatarUrl\n      })\n      \n      if (result.token) {\n        uni.setStorageSync('token', result.token)\n        uni.setStorageSync('userInfo', result.user)\n        // 清除 basicUserInfo，因为已经重新保存了完整的 userInfo\n        uni.removeStorageSync('basicUserInfo')\n      }\n      \n      uni.showToast({\n        title: '登录成功',\n        icon: 'success'\n      })\n      \n      setTimeout(() => {\n        uni.switchTab({ url: '/pages/index/index' })\n      }, 1500)\n    } catch (error) {\n      // 静默登录失败，显示插件让用户重新选择\n      login_show.value = true\n      \n      uni.showToast({\n        title: '登录失败，请重新选择',\n        icon: 'none'\n      })\n    } finally {\n      loading.value = false\n    }\n  } else {\n    // 用户信息不完整，显示安全注册插件\n    login_show.value = true\n  }\n  // #endif\n  \n  // #ifndef MP-WEIXIN\n  // 非微信环境，使用备用方案\n  await useBackupLogin()\n  // #endif\n}\n\n// 备用登录方案（插件未加载或失败时使用）\nasync function useBackupLogin() {\n  try {\n    await wechatLogin()\n    uni.showToast({\n      title: '登录成功',\n      icon: 'success'\n    })\n    \n    setTimeout(() => {\n      uni.switchTab({ url: '/pages/index/index' })\n    }, 1500)\n  } catch (error) {\n    uni.showToast({\n      title: error.message || '登录失败',\n      icon: 'none'\n    })\n  }\n}\n\n// 安全注册插件成功回调\nasync function loginSuccess(e) {\n  login_show.value = false\n  loading.value = true\n  \n  try {\n    // 插件只返回头像和昵称，需要调用后端登录接口获取 token\n    let nickname = ''\n    let avatarUrl = ''\n    \n    if (e.target && e.target.res) {\n      nickname = e.target.res.nickName || ''\n      avatarUrl = e.target.res.avatarUrl || ''\n    }\n    \n    // 调用后端登录接口\n    const result = await api.login({\n      code: `plugin_login_${Date.now()}`, // 插件登录用特殊的 code\n      nickname: nickname,\n      avatarUrl: avatarUrl\n    })\n    \n    // 保存用户信息\n    if (result.token) {\n      uni.setStorageSync('token', result.token)\n    }\n    \n    if (result.user) {\n      uni.setStorageSync('userInfo', result.user)\n      // 清除 basicUserInfo，因为已经重新保存了完整的 userInfo\n      uni.removeStorageSync('basicUserInfo')\n    }\n    \n    uni.showToast({\n      title: '登录成功',\n      icon: 'success'\n    })\n    \n    // 跳转到首页\n    setTimeout(() => {\n      uni.switchTab({ url: '/pages/index/index' })\n    }, 1500)\n  } catch (error) {\n    uni.showToast({\n      title: '登录失败',\n      icon: 'error'\n    })\n  } finally {\n    loading.value = false\n  }\n}\n\n// 安全注册插件失败回调\nfunction loginFail(e) {\n  login_show.value = false\n  \n  uni.showToast({\n    title: '登录失败',\n    icon: 'error'\n  })\n}\n\n// 安全注册插件取消回调\nfunction loginCancel(e) {\n  login_show.value = false\n}\n\nasync function handlePhoneLogin() {\n  if (!agreed.value) {\n    uni.showToast({\n      title: '请先同意用户协议',\n      icon: 'none'\n    })\n    return\n  }\n  \n  loading.value = true\n  \n  try {\n    await loginWithPhone()\n    uni.showToast({\n      title: '登录成功',\n      icon: 'success'\n    })\n    \n    // 跳转到首页\n    setTimeout(() => {\n      uni.switchTab({ url: '/pages/index/index' })\n    }, 1500)\n  } catch (error) {\n    console.error('手机号登录失败:', error)\n    uni.showToast({\n      title: error.message || '登录失败',\n      icon: 'none'\n    })\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction openAgreement() { \n  uni.showModal({\n    title: '用户协议',\n    content: '这里是用户协议的内容...',\n    showCancel: false\n  })\n}\n\nfunction openPrivacy() { \n  uni.showModal({\n    title: '隐私政策',\n    content: '这里是隐私政策的内容...',\n    showCancel: false\n  })\n}\n</script>\n\n<style scoped>\n    .login-page {\n\t\theight: 100vh;\n\t\tpadding: 96rpx 48rpx 48rpx;\n\t\tbox-sizing: border-box;\n        background: url('/static/login/login-bg.png') center/cover no-repeat fixed,\n                    linear-gradient(180deg, #ffe082 0%, #fff6cc 28%, #fff9e6 60%, #fffcee 100%);\n\t\tposition: relative;\n\t}\n\n\n    .logo {\n        width: 308rpx;\n        display: block;\n        margin: 200rpx auto 24rpx; /* 往下移动 */\n    }\n\n    .title {\n        text-align: center;\n        color: #1a1a1a; /* 调深标题颜色 */\n        font-size: 40rpx;\n\t\tfont-weight: 550;\n        margin-bottom: 80rpx;\n    }\n\n    .btn-group {\n        display: flex;\n        flex-direction: column;\n        gap: 28rpx;\n        align-items: center;\n        margin: 0 16rpx;\n    }\n\n    .btn {\n\t\tborder-radius: 999rpx;\n\t\tline-height: 96rpx;\n\t\theight: 96rpx;\n        font-size: 34rpx;\n\t\ttext-align: center;\n        border: 4rpx solid #2c2c2c; /* 深色描边 */\n\t\tbackground-color: #ffd54f;\n        color: #0e0e0e; /* 进一步加深按钮文字 */\n        width: 620rpx; /* 增加并统一按钮长度 */\n        box-shadow: 0 2rpx 0 rgba(0,0,0,0.06);\n\t}\n\n    /* 确保小程序端文字颜色不被默认样式覆盖 */\n    .btn text { color: #0e0e0e; }\n\n\t.btn.wx {\n\t\tbackground-color: #ffd54f;\n\t}\n\n\t.btn.phone {\n\t\tbackground-color: #ffe082;\n\t}\n\n\t.btn:disabled {\n\t\topacity: 0.6;\n\t}\n\n\t.icon {\n\t\tmargin-right: 8rpx;\n\t}\n\n    .icon-img {\n        width: 40rpx;\n        height: 40rpx;\n        margin-right: 12rpx;\n        vertical-align: middle;\n    }\n\n\t.agreement {\n\t\tmargin-top: 36rpx;\n\t\tfont-size: 22rpx;\n\t\tcolor: #888;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-wrap: wrap;\n\t\tgap: 4rpx;\n\t}\n\n\t.checkbox {\n\t\twidth: 32rpx;\n\t\theight: 32rpx;\n\t\tborder-radius: 50%;\n\t\tborder: 2rpx solid #bbb;\n\t\tmargin-right: 12rpx;\n\t\tposition: relative;\n\t}\n\n\t.checkbox.checked {\n\t\tbackground-color: #ffd54f;\n\t\tborder-color: #f1c40f;\n\t}\n\n\t.link {\n\t\tcolor: #f1a400;\n\t}\n\n\t/* 测试相关样式 */\n\t.test-info {\n\t\tmargin-top: 40rpx;\n\t\tpadding: 20rpx;\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t\tborder-radius: 10rpx;\n\t\tborder: 2rpx solid #ddd;\n\t}\n\n\t.test-title {\n\t\tdisplay: block;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 20rpx;\n\t\tcolor: #333;\n\t}\n\n\t.test-item {\n\t\tdisplay: block;\n\t\tfont-size: 24rpx;\n\t\tmargin-bottom: 10rpx;\n\t\tcolor: #666;\n\t\tword-break: break-all;\n\t}\n\n\t.test-buttons {\n\t\tmargin-top: 20rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 10rpx;\n\t}\n\n\t.test-btn {\n\t\tpadding: 20rpx;\n\t\tbackground-color: #007aff;\n\t\tcolor: white;\n\t\tborder: none;\n\t\tborder-radius: 10rpx;\n\t\tfont-size: 28rpx;\n\t}\n\n\t.test-btn:disabled {\n\t\tbackground-color: #ccc;\n\t}\n\n\t.test-toggle {\n\t\tmargin-top: 20rpx;\n\t\tpadding: 20rpx;\n\t\tbackground-color: #f0f0f0;\n\t\tborder-radius: 10rpx;\n\t\ttext-align: center;\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t}\n\n\t/* 安全注册插件样式 */\n\t.login-modal {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tz-index: 9999;\n\t}\n</style>\n\n\n","import MiniProgramPage from 'E:/Uni-App-file/pet-house/pages/login/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onMounted","initState","uni","checkLogin","isTokenValid","api","wechatLogin","loginWithPhone","handleLogout"],"mappings":"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"}