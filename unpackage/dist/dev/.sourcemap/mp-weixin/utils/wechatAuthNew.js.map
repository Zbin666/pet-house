{"version":3,"file":"wechatAuthNew.js","sources":["utils/wechatAuthNew.js"],"sourcesContent":["// 微信授权登录 - 新的实现方式\r\nimport { api } from './api.js'\r\n\r\n/**\r\n * 微信登录 - 第一步：获取用户授权信息\r\n * 这个函数必须在用户直接点击事件中调用\r\n */\r\nexport const wechatLogin = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // 检查是否已同意协议\r\n    const agreed = uni.getStorageSync('agreed')\r\n    if (!agreed) {\r\n      uni.showToast({\r\n        title: '请先同意用户协议',\r\n        icon: 'none'\r\n      })\r\n      return reject(new Error('请先同意用户协议'))\r\n    }\r\n\r\n    // 第一步：获取用户授权信息（会弹出微信授权页面）\r\n    uni.getUserProfile({\r\n      desc: '用于完善用户资料',\r\n      success: async (userRes) => {\r\n        try {\r\n          console.log('获取用户授权信息成功:', userRes)\r\n          \r\n          // 第二步：获取微信登录凭证\r\n          uni.login({\r\n            provider: 'weixin',\r\n            success: async (loginRes) => {\r\n              try {\r\n                console.log('微信登录凭证获取成功:', loginRes)\r\n                \r\n                // 第三步：调用后端登录接口\r\n                const result = await api.login({\r\n                  code: loginRes.code,\r\n                  nickname: userRes.userInfo.nickName,\r\n                  avatarUrl: userRes.userInfo.avatarUrl\r\n                })\r\n                \r\n                // 保存登录信息\r\n                uni.setStorageSync('token', result.token)\r\n                uni.setStorageSync('userInfo', result.user)\r\n                \r\n                console.log('微信登录成功:', result)\r\n                resolve(result)\r\n              } catch (error) {\r\n                console.error('后端登录失败:', error)\r\n                reject(error)\r\n              }\r\n            },\r\n            fail: (error) => {\r\n              console.error('获取微信登录凭证失败:', error)\r\n              reject(error)\r\n            }\r\n          })\r\n        } catch (error) {\r\n          console.error('处理用户信息失败:', error)\r\n          reject(error)\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('获取用户授权信息失败:', error)\r\n        // 如果用户拒绝授权，给出友好提示\r\n        if (error.errMsg && error.errMsg.includes('deny')) {\r\n          uni.showToast({\r\n            title: '需要授权才能登录',\r\n            icon: 'none'\r\n          })\r\n        }\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 微信静默登录 - 不弹出授权页面\r\n * 适用于已经授权过的用户\r\n */\r\nexport const wechatSilentLogin = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.login({\r\n      provider: 'weixin',\r\n      success: async (loginRes) => {\r\n        try {\r\n          console.log('微信静默登录成功:', loginRes)\r\n          \r\n          // 调用后端登录接口\r\n          const result = await api.login({\r\n            code: loginRes.code,\r\n            nickname: '微信用户',\r\n            avatarUrl: ''\r\n          })\r\n          \r\n          // 保存登录信息\r\n          uni.setStorageSync('token', result.token)\r\n          uni.setStorageSync('userInfo', result.user)\r\n          \r\n          resolve(result)\r\n        } catch (error) {\r\n          console.error('微信静默登录失败:', error)\r\n          reject(error)\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('微信静默登录失败:', error)\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 检查微信登录状态\r\n */\r\nexport const checkWechatLoginStatus = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.checkSession({\r\n      success: () => {\r\n        console.log('微信登录状态有效')\r\n        resolve(true)\r\n      },\r\n      fail: () => {\r\n        console.log('微信登录状态已失效')\r\n        resolve(false)\r\n      }\r\n    })\r\n  })\r\n}\r\n"],"names":["uni","api"],"mappings":";;;AAOY,MAAC,cAAc,MAAM;AAC/B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,UAAM,SAASA,cAAAA,MAAI,eAAe,QAAQ;AAC1C,QAAI,CAAC,QAAQ;AACXA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AACD,aAAO,OAAO,IAAI,MAAM,UAAU,CAAC;AAAA,IACpC;AAGDA,kBAAAA,MAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,SAAS,OAAO,YAAY;AAC1B,YAAI;AACFA,wBAAAA,MAAY,MAAA,OAAA,gCAAA,eAAe,OAAO;AAGlCA,wBAAAA,MAAI,MAAM;AAAA,YACR,UAAU;AAAA,YACV,SAAS,OAAO,aAAa;AAC3B,kBAAI;AACFA,8BAAAA,MAAY,MAAA,OAAA,gCAAA,eAAe,QAAQ;AAGnC,sBAAM,SAAS,MAAMC,UAAG,IAAC,MAAM;AAAA,kBAC7B,MAAM,SAAS;AAAA,kBACf,UAAU,QAAQ,SAAS;AAAA,kBAC3B,WAAW,QAAQ,SAAS;AAAA,gBAC9C,CAAiB;AAGDD,8BAAAA,MAAI,eAAe,SAAS,OAAO,KAAK;AACxCA,8BAAAA,MAAI,eAAe,YAAY,OAAO,IAAI;AAE1CA,8BAAAA,MAAY,MAAA,OAAA,gCAAA,WAAW,MAAM;AAC7B,wBAAQ,MAAM;AAAA,cACf,SAAQ,OAAO;AACdA,8BAAAA,MAAA,MAAA,SAAA,gCAAc,WAAW,KAAK;AAC9B,uBAAO,KAAK;AAAA,cACb;AAAA,YACF;AAAA,YACD,MAAM,CAAC,UAAU;AACfA,4BAAAA,MAAA,MAAA,SAAA,gCAAc,eAAe,KAAK;AAClC,qBAAO,KAAK;AAAA,YACb;AAAA,UACb,CAAW;AAAA,QACF,SAAQ,OAAO;AACdA,wBAAAA,MAAA,MAAA,SAAA,gCAAc,aAAa,KAAK;AAChC,iBAAO,KAAK;AAAA,QACb;AAAA,MACF;AAAA,MACD,MAAM,CAAC,UAAU;AACfA,sBAAAA,MAAA,MAAA,SAAA,gCAAc,eAAe,KAAK;AAElC,YAAI,MAAM,UAAU,MAAM,OAAO,SAAS,MAAM,GAAG;AACjDA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AAAA,QACF;AACD,eAAO,KAAK;AAAA,MACb;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;"}