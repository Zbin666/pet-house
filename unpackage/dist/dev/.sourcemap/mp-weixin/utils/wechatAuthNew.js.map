{"version":3,"file":"wechatAuthNew.js","sources":["utils/wechatAuthNew.js"],"sourcesContent":["// 微信授权登录 - 新的实现方式\nimport { api } from './api.js'\n\n/**\n * 微信登录 - 2024新版（使用静默登录）\n * 注意：getUserProfile已废弃，直接使用静默登录\n * 用户信息可通过插件或后续设置获取\n */\nexport const wechatLogin = () => {\n  return new Promise((resolve, reject) => {\n    // 检查是否已同意协议\n    const agreed = uni.getStorageSync('agreed')\n    if (!agreed) {\n      uni.showToast({\n        title: '请先同意用户协议',\n        icon: 'none'\n      })\n      return reject(new Error('请先同意用户协议'))\n    }\n\n    // 直接使用静默登录（不再使用getUserProfile）\n    uni.login({\n      provider: 'weixin',\n      success: async (loginRes) => {\n        try {\n          console.log('微信登录凭证获取成功:', loginRes)\n          \n          // 调用后端登录接口\n          const result = await api.login({\n            code: loginRes.code,\n            nickname: '微信用户',  // 默认昵称，用户可在设置中修改\n            avatarUrl: ''           // 默认头像，用户可在设置中上传\n          })\n          \n          // 保存登录信息\n          uni.setStorageSync('token', result.token)\n          uni.setStorageSync('userInfo', result.user)\n          \n          console.log('微信登录成功:', result)\n          resolve(result)\n        } catch (error) {\n          console.error('后端登录失败:', error)\n          reject(error)\n        }\n      },\n      fail: (error) => {\n        console.error('获取微信登录凭证失败:', error)\n        reject(error)\n      }\n    })\n  })\n}\n\n/**\n * 微信静默登录 - 不弹出授权页面\n * 适用于已经授权过的用户\n */\nexport const wechatSilentLogin = () => {\n  return new Promise((resolve, reject) => {\n    uni.login({\n      provider: 'weixin',\n      success: async (loginRes) => {\n        try {\n          console.log('微信静默登录成功:', loginRes)\n          \n          // 调用后端登录接口\n          const result = await api.login({\n            code: loginRes.code,\n            nickname: '微信用户',\n            avatarUrl: ''\n          })\n          \n          // 保存登录信息\n          uni.setStorageSync('token', result.token)\n          uni.setStorageSync('userInfo', result.user)\n          \n          resolve(result)\n        } catch (error) {\n          console.error('微信静默登录失败:', error)\n          reject(error)\n        }\n      },\n      fail: (error) => {\n        console.error('微信静默登录失败:', error)\n        reject(error)\n      }\n    })\n  })\n}\n\n/**\n * 检查微信登录状态\n */\nexport const checkWechatLoginStatus = () => {\n  return new Promise((resolve, reject) => {\n    uni.checkSession({\n      success: () => {\n        console.log('微信登录状态有效')\n        resolve(true)\n      },\n      fail: () => {\n        console.log('微信登录状态已失效')\n        resolve(false)\n      }\n    })\n  })\n}\n"],"names":["uni","api"],"mappings":";;;AAQY,MAAC,cAAc,MAAM;AAC/B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,UAAM,SAASA,cAAAA,MAAI,eAAe,QAAQ;AAC1C,QAAI,CAAC,QAAQ;AACXA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AACD,aAAO,OAAO,IAAI,MAAM,UAAU,CAAC;AAAA,IACpC;AAGDA,kBAAAA,MAAI,MAAM;AAAA,MACR,UAAU;AAAA,MACV,SAAS,OAAO,aAAa;AAC3B,YAAI;AACFA,wBAAAA,MAAY,MAAA,OAAA,gCAAA,eAAe,QAAQ;AAGnC,gBAAM,SAAS,MAAMC,UAAG,IAAC,MAAM;AAAA,YAC7B,MAAM,SAAS;AAAA,YACf,UAAU;AAAA;AAAA,YACV,WAAW;AAAA;AAAA,UACvB,CAAW;AAGDD,wBAAAA,MAAI,eAAe,SAAS,OAAO,KAAK;AACxCA,wBAAAA,MAAI,eAAe,YAAY,OAAO,IAAI;AAE1CA,wBAAAA,MAAY,MAAA,OAAA,gCAAA,WAAW,MAAM;AAC7B,kBAAQ,MAAM;AAAA,QACf,SAAQ,OAAO;AACdA,wBAAAA,MAAc,MAAA,SAAA,gCAAA,WAAW,KAAK;AAC9B,iBAAO,KAAK;AAAA,QACb;AAAA,MACF;AAAA,MACD,MAAM,CAAC,UAAU;AACfA,sBAAAA,MAAA,MAAA,SAAA,gCAAc,eAAe,KAAK;AAClC,eAAO,KAAK;AAAA,MACb;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;"}