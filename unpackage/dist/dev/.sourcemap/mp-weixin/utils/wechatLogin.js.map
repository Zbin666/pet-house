{"version":3,"file":"wechatLogin.js","sources":["utils/wechatLogin.js"],"sourcesContent":["// 微信登录工具 - 解决 getUserProfile 调用限制\r\nimport { api } from './api.js'\r\n\r\n// 存储登录状态\r\nlet loginCallback = null\r\nlet loginCode = null\r\n\r\n/**\r\n * 微信登录 - 第一步：获取登录凭证\r\n * 这个函数必须在用户直接点击事件中调用\r\n */\r\nexport const startWechatLogin = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // 检查是否已同意协议\r\n    const agreed = uni.getStorageSync('agreed')\r\n    if (!agreed) {\r\n      uni.showToast({\r\n        title: '请先同意用户协议',\r\n        icon: 'none'\r\n      })\r\n      return reject(new Error('请先同意用户协议'))\r\n    }\r\n\r\n    // 获取微信登录凭证\r\n    uni.login({\r\n      provider: 'weixin',\r\n      success: (loginRes) => {\r\n        console.log('微信登录凭证获取成功:', loginRes)\r\n        loginCode = loginRes.code\r\n        \r\n        // 立即获取用户授权信息\r\n        getUserProfile()\r\n          .then((userInfo) => {\r\n            console.log('获取用户授权信息成功:', userInfo)\r\n            \r\n            // 调用后端登录接口\r\n            api.login({\r\n              code: loginRes.code,\r\n              nickname: userInfo.nickName,\r\n              avatarUrl: userInfo.avatarUrl\r\n            })\r\n            .then((result) => {\r\n              // 保存登录信息\r\n              uni.setStorageSync('token', result.token)\r\n              uni.setStorageSync('userInfo', result.user)\r\n              \r\n              console.log('微信登录成功:', result)\r\n              resolve(result)\r\n            })\r\n            .catch((error) => {\r\n              console.error('后端登录失败:', error)\r\n              reject(error)\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            console.error('获取用户授权信息失败:', error)\r\n            reject(error)\r\n          })\r\n      },\r\n      fail: (error) => {\r\n        console.error('获取微信登录凭证失败:', error)\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 获取用户授权信息 - 会弹出微信授权页面\r\n * 这个函数必须在用户直接点击事件中调用\r\n */\r\nexport const getUserProfile = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.getUserProfile({\r\n      desc: '用于完善用户资料', // 声明获取用户个人信息后的用途\r\n      success: (res) => {\r\n        console.log('获取用户授权信息成功:', res)\r\n        resolve(res.userInfo)\r\n      },\r\n      fail: (error) => {\r\n        console.error('获取用户授权信息失败:', error)\r\n        // 如果用户拒绝授权，给出友好提示\r\n        if (error.errMsg && error.errMsg.includes('deny')) {\r\n          uni.showToast({\r\n            title: '需要授权才能登录',\r\n            icon: 'none'\r\n          })\r\n        }\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 微信静默登录 - 不弹出授权页面\r\n * 适用于已经授权过的用户\r\n */\r\nexport const wechatSilentLogin = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.login({\r\n      provider: 'weixin',\r\n      success: async (loginRes) => {\r\n        try {\r\n          console.log('微信静默登录成功:', loginRes)\r\n          \r\n          // 调用后端登录接口\r\n          const result = await api.login({\r\n            code: loginRes.code,\r\n            nickname: '微信用户',\r\n            avatarUrl: ''\r\n          })\r\n          \r\n          // 保存登录信息\r\n          uni.setStorageSync('token', result.token)\r\n          uni.setStorageSync('userInfo', result.user)\r\n          \r\n          resolve(result)\r\n        } catch (error) {\r\n          console.error('微信静默登录失败:', error)\r\n          reject(error)\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('微信静默登录失败:', error)\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 检查微信登录状态\r\n */\r\nexport const checkWechatLoginStatus = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.checkSession({\r\n      success: () => {\r\n        console.log('微信登录状态有效')\r\n        resolve(true)\r\n      },\r\n      fail: () => {\r\n        console.log('微信登录状态已失效')\r\n        resolve(false)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 微信登录状态失效处理\r\n */\r\nexport const handleWechatSessionExpired = () => {\r\n  uni.showModal({\r\n    title: '登录状态已失效',\r\n    content: '请重新登录',\r\n    showCancel: false,\r\n    success: () => {\r\n      // 清除本地存储\r\n      uni.removeStorageSync('token')\r\n      uni.removeStorageSync('userInfo')\r\n      \r\n      // 跳转到登录页\r\n      uni.reLaunch({\r\n        url: '/pages/login/login'\r\n      })\r\n    }\r\n  })\r\n}\r\n"],"names":["uni","api"],"mappings":";;;AAWY,MAAC,mBAAmB,MAAM;AACpC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,UAAM,SAASA,cAAAA,MAAI,eAAe,QAAQ;AAC1C,QAAI,CAAC,QAAQ;AACXA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AACD,aAAO,OAAO,IAAI,MAAM,UAAU,CAAC;AAAA,IACpC;AAGDA,kBAAAA,MAAI,MAAM;AAAA,MACR,UAAU;AAAA,MACV,SAAS,CAAC,aAAa;AACrBA,sBAAAA,MAAY,MAAA,OAAA,8BAAA,eAAe,QAAQ;AACvB,iBAAS;AAGrB,uBAAgB,EACb,KAAK,CAAC,aAAa;AAClBA,wBAAAA,MAAY,MAAA,OAAA,8BAAA,eAAe,QAAQ;AAGnCC,oBAAAA,IAAI,MAAM;AAAA,YACR,MAAM,SAAS;AAAA,YACf,UAAU,SAAS;AAAA,YACnB,WAAW,SAAS;AAAA,UAClC,CAAa,EACA,KAAK,CAAC,WAAW;AAEhBD,0BAAAA,MAAI,eAAe,SAAS,OAAO,KAAK;AACxCA,0BAAAA,MAAI,eAAe,YAAY,OAAO,IAAI;AAE1CA,0BAAAA,iDAAY,WAAW,MAAM;AAC7B,oBAAQ,MAAM;AAAA,UAC5B,CAAa,EACA,MAAM,CAAC,UAAU;AAChBA,0BAAAA,MAAc,MAAA,SAAA,8BAAA,WAAW,KAAK;AAC9B,mBAAO,KAAK;AAAA,UAC1B,CAAa;AAAA,QACb,CAAW,EACA,MAAM,CAAC,UAAU;AAChBA,wBAAAA,MAAc,MAAA,SAAA,8BAAA,eAAe,KAAK;AAClC,iBAAO,KAAK;AAAA,QACxB,CAAW;AAAA,MACJ;AAAA,MACD,MAAM,CAAC,UAAU;AACfA,sBAAAA,MAAA,MAAA,SAAA,8BAAc,eAAe,KAAK;AAClC,eAAO,KAAK;AAAA,MACb;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAMO,MAAM,iBAAiB,MAAM;AAClC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,eAAe;AAAA,MACjB,MAAM;AAAA;AAAA,MACN,SAAS,CAAC,QAAQ;AAChBA,sBAAAA,MAAY,MAAA,OAAA,8BAAA,eAAe,GAAG;AAC9B,gBAAQ,IAAI,QAAQ;AAAA,MACrB;AAAA,MACD,MAAM,CAAC,UAAU;AACfA,sBAAAA,MAAA,MAAA,SAAA,8BAAc,eAAe,KAAK;AAElC,YAAI,MAAM,UAAU,MAAM,OAAO,SAAS,MAAM,GAAG;AACjDA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AAAA,QACF;AACD,eAAO,KAAK;AAAA,MACb;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;"}